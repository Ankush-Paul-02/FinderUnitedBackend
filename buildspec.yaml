version: 0.2

phases:
  pre_build:
    commands:
      - REPOSITORY_URI=820242940845.dkr.ecr.ap-south-1.amazonaws.com/devamre-ecr
      - mvn clean install -U | tee mvn_build.log
      - echo Logging in to Amazon ECR...
      - aws --version
      - echo $REPOSITORY_URI
      - aws ecr get-login-password --region ap-south-1 | docker login --username AWS --password-stdin $REPOSITORY_URI || echo "Docker login failed"
      - echo "Login successful"
      - echo $CODEBUILD_RESOLVED_SOURCE_VERSION
      - COMMIT_HASH=$(echo $CODEBUILD_RESOLVED_SOURCE_VERSION | cut -c 1-7)
      - echo $COMMIT_HASH
      - IMAGE_TAG=build-$(echo $CODEBUILD_BUILD_ID | awk -F":" '{print $2}')
      - echo $IMAGE_TAG
  build: # build and tag the docker image
    commands:
      - echo Build started on `date`
      - echo Building the Docker image...
      - docker build -t $REPOSITORY_URI:latest .
      - docker tag $REPOSITORY_URI:latest $REPOSITORY_URI:$IMAGE_TAG
  post_build: # push the image to ecr
    commands:
      - echo Build completed on `date`
      - echo Pushing the Docker images...
      - docker push $REPOSITORY_URI:latest
      - docker push $REPOSITORY_URI:$IMAGE_TAG
      - echo Writing image definitions file...
      - printf '[{"name":"Finder-United","imageUri":"%s"}]' $REPOSITORY_URI:$IMAGE_TAG > imagedefinitions.json
      - echo Writing image definitions file...
      # add your container name
      - DOCKER_CONTAINER_NAME=devamre-ecr
      - printf '[{"name":"%s","imageUri":"%s"}]' $DOCKER_CONTAINER_NAME $REPOSITORY_URI:$IMAGE_TAG > imagedefinitions.json
      - echo $DOCKER_CONTAINER_NAME
      - echo printing imagedefinitions.json
      - cat imagedefinitions.json

artifacts:
  files:
    - imagedefinitions.json
    - target/FinderUnited-1.0.0.jar
